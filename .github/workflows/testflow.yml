name: Integration tests with KeyCloak

on:
  push:
    branches:
      - registreren
  pull_request:
    branches:
      - registreren

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Start Keycloak
        run: |
          docker run -d \
            -p 8080:8080 \
            -e KEYCLOAK_ADMIN=${{ secrets.KEYCLOAK_ADMIN }} \
            -e KEYCLOAK_ADMIN_PASSWORD=${{ secrets.KEYCLOAK_PASSWORD }} \
            -v ${{ github.workspace }}/keycloak-export/Babymonitor-realm.json:/opt/keycloak/data/import/realm-export.json \
            --name keycloak \
            quay.io/keycloak/keycloak:17.0.1 \
            start-dev --http-host=0.0.0.0 --import-realm


      - name: Wait for Keycloak
        run: |
          if [ -z "${{ secrets.KEYCLOAK_URL }}" ]; then
            KEYCLOAK_URL="http://localhost:8080"
          else
            KEYCLOAK_URL="${{ secrets.KEYCLOAK_URL }}"
          fi
          echo "Waiting for Keycloak at $KEYCLOAK_URL"
          for i in {1..30}; do
            STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" $KEYCLOAK_URL)
            if [ $STATUS_CODE -eq 200 ]; then
              echo "Keycloak is up!"
              break
            fi
            echo "Waiting for Keycloak..."
            sleep 5
          done


      - name: Create .env file
        run: |
          echo "Creating .env file with secrets"
          cat <<EOF > .env
          KEYCLOAK_ADMIN=${{ secrets.KEYCLOAK_ADMIN }}
          KEYCLOAK_ADMIN_PASSWORD=${{ secrets.KEYCLOAK_PASSWORD }}
          KEYCLOAK_AUTH_SERVER_URL=${{ secrets.KEYCLOAK_URL }}
          KEYCLOAK_CLIENT_ID=${{ secrets.KEYCLOAK_ID }}
          KEYCLOAK_REALM=${{ secrets.KEYCLOAK_REALM }}
          KEYCLOAK_USER_ADMIN=${{ secrets.KEYCLOAK_USER_ADMIN }}
          KEYCLOAK_USER_PASSWORD=${{ secrets.KEYCLOAK_USER_PASSWORD }}
          jwt.secret=${{ secrets.JWT_SECRET }}
          jwt.expiration=${{ secrets.JWT_EXPIRATION }}
          EOF

      - name: Run Tests
        run: mvn test

      - name: Stop Keycloak
        if: always()
        run: docker stop keycloak
